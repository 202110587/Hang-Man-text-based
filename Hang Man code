#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <windows.h>
#include <string.h>
#define word_num 20
//함수
void game_set();//game 진행상태 출력
int check_word(char input_word);
int prevent_overlap(char input_word);
void print_input_word();
int decide_clear();
int my_strlen(char* string);
int string_compare(char s1[], char s2[]);

//전역 변수
char dic[word_num][15] = { {"rhythm"}, {"spring"}, {"earthquake"}, {"wireless"}, {"planetarium"},
	{"okay"}, {"beautiful"},{"termproject"},{"hard"}, {"complexity"},{"mandate"},{"profitable"},
	{"invulnerable"},{"bear"},{"dry"},{"jazz"},{"kite"},{"apple"},{"alphabet"},{"part"} };


char ans[20] = {};
char input_word;//입력받은 알파벳
int selected_num;//임의로 선택된 dic 단어
int life = 10;//기회
int p = 0;//ans의 위치, 횟수
int i, j, hap_miss;
bool flag = true;
char under_bar = '_';

int main() {
	srand((unsigned)time(NULL));
	selected_num = rand() % word_num;
	while (1) {
		while (1) {
			hap_miss = 0;
			printf("Life: %d\n", life);
			game_set();
			print_input_word();
			printf("알파벳을 입력하세요:");
			scanf_s("%c", &input_word, 1);
			getchar();//enter키 오류 방지
			if (prevent_overlap(input_word) == 1) {//중복이면 종료
				system("cls");
				printf("중복된 알파벳을 입력하셨습니다..\n");
				Sleep(1000);
				system("cls");
				hap_miss ++;
				break;
			}
			if (life <= 0) break;//라이프가 0이하면 종료
			else {//입력이 올바르면 
				ans[p] = input_word;
				p += 1;
				break;	
			}
		}

		if (check_word(input_word) == 0 || hap_miss>0) {
			printf("Life가 1 감소합니다..");
			life -= 1;
		}
		else printf("맞았습니다!");




		if (decide_clear() == 1 && life > 0) {//Clear
			system("cls");
			printf("...\n");
			Sleep(1000);
			printf("....\n");
			Sleep(1000);
			printf(".....\n");
			Sleep(1000);
			printf("Game Clear!");
			return 0;
		}
		if (life <= 0) {//게임 오버
			system("cls");
			printf("...\n");
			Sleep(1000);
			printf("....\n");
			Sleep(1000);
			printf(".....\n");
			Sleep(1000);
			printf("\nGame Over..\n");
			printf("정답은: %s", dic[selected_num]);
			return 0;
		}
		Sleep(1500);//화면 Clean
		system("cls");
	}
}


void game_set() {
	for (i = 0; i < my_strlen(dic[selected_num]); i++) {
		printf("_ ");
		for (j = 0; j <= p; j++) {
			if (dic[selected_num][i] == ans[j]) printf("\b\b%c ", dic[selected_num][i]);
		}
	}
	printf("총 %d글자입니다!", i);
}
int prevent_overlap(char input_word) {//중복된 단어 체크
	int dis = 0;
	for (int q = 0; q <= p; q++) {
		if (ans[q] == input_word) {
			dis = 1;
		}
	}
	return dis;
}

int check_word(char input_word) {//단어가 맞았는지 틀렸는지 체크
	int judge = 0;
	for (i = 0; i < my_strlen(dic[selected_num]); i++) {
		if (ans[p - 1] == dic[selected_num][i]) {
			judge	= 1;
		}
	}
	return judge;
}

int decide_clear() {
	int judge = 0;
	for (i = 0; i < my_strlen(dic[selected_num]); i++) {
		for (j = 0; j < p; j++) {
			if (dic[selected_num][i] == ans[j]) judge += 1;
		}
	}
	if (judge == my_strlen(dic[selected_num])) return 1;
	else return 0;
}

void print_input_word() {//입력된 단어 출력
	static int cnt = 0;
	if (cnt > 0) {
		printf("\n지금까지 입력한 단어:");
		for (i = 0; i < p; i++) printf("%c ", ans[i]);
	}
	printf("\n");
	cnt++;
}
int my_strlen(char* string) {
	int count = 0;
	while (string[count] != '\0')count++;
	return count;
}
int string_compare(char s1[], char s2[]) {
	int z = 0;
	while (s1[z] != '\0' || s2[z] != '\0') {
		if (s1[z] > s2[z])return 1;
		else if (s1[z] < s2[z]) return -1;
		else z++;
	}
	return 0;
}
